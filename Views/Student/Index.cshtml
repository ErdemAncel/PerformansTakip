@model IEnumerable<PerformansTakip.Models.Student>

@{
    ViewData["Title"] = "Öğrenci Listesi";
}

<div class="container-fluid fade-in">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2 class="text-primary">
                <i class="fas fa-user-graduate me-2"></i>Öğrenci Listesi
            </h2>
        </div>
        <div class="col-md-6 text-end">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addStudentModal">
                <i class="fas fa-plus me-2"></i>Yeni Öğrenci Ekle
            </button>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                            <th>@Html.DisplayNameFor(model => model.LastName)</th>
                            <th>@Html.DisplayNameFor(model => model.Class)</th>
                            <th>@Html.DisplayNameFor(model => model.UniformStatus)</th>
                            <th>@Html.DisplayNameFor(model => model.HomeworkStatus)</th>
                            <th>@Html.DisplayNameFor(model => model.PerformanceScore)</th>
                            <th>@Html.DisplayNameFor(model => model.LastUpdated)</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="align-middle">
                                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                <td>
                                    <span class="badge bg-info">
                                        <i class="fas fa-users me-1"></i>
                                        @Html.DisplayFor(modelItem => item.Class.Name)
                                    </span>
                                </td>
                                <td>
                                    @if (item.UniformStatus)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Uygun
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-times me-1"></i>Uygun Değil
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (item.HomeworkStatus)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Tamamlandı
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-times me-1"></i>Tamamlanmadı
                                        </span>
                                    }
                                </td>
                                <td style="width: 200px;">
                                    <div class="progress" style="height: 20px;" data-bs-toggle="tooltip" title="@item.PerformanceScore%">
                                        <div class="progress-bar @(item.PerformanceScore >= 70 ? "bg-success" : item.PerformanceScore >= 50 ? "bg-warning" : "bg-danger")"
                                             role="progressbar"
                                             style="width: @(item.PerformanceScore)%"
                                             aria-valuenow="@item.PerformanceScore"
                                             aria-valuemin="0"
                                             aria-valuemax="100">
                                            @item.PerformanceScore%
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <small class="text-muted">
                                        <i class="fas fa-clock me-1"></i>
                                        @item.LastUpdated.ToString("dd/MM/yyyy HH:mm")
                                    </small>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary" onclick="editStudent(@item.Id)" data-bs-toggle="tooltip" title="Düzenle">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" onclick="deleteStudent(@item.Id)" data-bs-toggle="tooltip" title="Sil">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Öğrenci Ekleme Modal -->
<div class="modal fade" id="addStudentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-user-plus me-2"></i>Yeni Öğrenci Ekle
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addStudentForm">
                    <div class="mb-3">
                        <label class="form-label">Ad</label>
                        <input type="text" class="form-control" name="firstName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Soyad</label>
                        <input type="text" class="form-control" name="lastName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Sınıf</label>
                        <select class="form-select" name="classId" required>
                            <option value="">Sınıf Seçin</option>
                            @foreach (var classItem in ViewBag.Classes ?? new List<SelectListItem>())
                            {
                                <option value="@classItem.Value">@classItem.Text</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>İptal
                </button>
                <button type="button" class="btn btn-primary" onclick="saveStudent()">
                    <i class="fas fa-save me-2"></i>Kaydet
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editStudent(id) {
            // Öğrenci düzenleme işlemi
            Toast.fire({
                icon: 'info',
                title: 'Öğrenci düzenleme özelliği yakında eklenecek'
            });
        }

        function deleteStudent(id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu öğrenciyi silmek istediğinize emin misiniz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, sil',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Silme işlemi
                    $.post('/Student/Delete/' + id, function(response) {
                        if (response.success) {
                            Toast.fire({
                                icon: 'success',
                                title: 'Öğrenci başarıyla silindi'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Toast.fire({
                                icon: 'error',
                                title: 'Hata oluştu: ' + response.message
                            });
                        }
                    });
                }
            });
        }

        function saveStudent() {
            var form = $('#addStudentForm');
            var data = {
                firstName: form.find('[name="firstName"]').val(),
                lastName: form.find('[name="lastName"]').val(),
                classId: form.find('[name="classId"]').val()
            };

            $.ajax({
                url: '/Student/Add',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    if (response.success) {
                        $('#addStudentModal').modal('hide');
                        Toast.fire({
                            icon: 'success',
                            title: 'Öğrenci başarıyla eklendi'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Toast.fire({
                            icon: 'error',
                            title: 'Hata oluştu: ' + response.message
                        });
                    }
                },
                error: function() {
                    Toast.fire({
                        icon: 'error',
                        title: 'Bir hata oluştu'
                    });
                }
            });
        }

        // Sayfa yüklendiğinde
        $(document).ready(function() {
            // Tabloya arama ve sıralama özelliği ekle
            if ($.fn.DataTable) {
                $('.table').DataTable({
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json'
                    }
                });
            }
        });
    </script>
} 